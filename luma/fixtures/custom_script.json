[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Delivery Note", 
  "modified": "2018-06-04 14:53:41.360132", 
  "name": "Delivery Note-Client", 
  "script": "frappe.ui.form.on(\"Delivery Note\", \"refresh\", function(frm) {\n\tif (frm.doc.docstatus===0) {\n\t\tif(cur_frm.doc.__islocal && cur_frm.doc.items[0].qty ==0){\n\t\t\tcur_frm.set_value(\"items\",[])\n\t\t}\n\t\tcur_frm.add_custom_button(__('Get items from SO'), \n\t\t\tfunction() {\n\t\t\t\tfrappe.model.map_current_doc_custom({\n\t\t\t\t\tmethod: \"luma.custom_method.custom_method.make_delivery_note_cs\",\n\t\t\t\t\titem_code: \"abc\",\n\t\t\t\t\tsource_doctype: \"Sales Order\",\n\t\t\t\t\tget_query_filters: {\n\t\t\t\t\t\tdocstatus: 1,\n\t\t\t\t\t\tstatus: [\"not in\", [\"Stopped\", \"Closed\"]],\n\t\t\t\t\t\tper_delivered: [\"<\", 99.99],\n\t\t\t\t\t\tproject_name: cur_frm.doc.project_name || undefined,\n\t\t\t\t\t\tcustomer: cur_frm.doc.customer || undefined,\n\t\t\t\t\t\tcompany: cur_frm.doc.company\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\t}\n});\nfrappe.provide(\"frappe.model\");\n\n$.extend(frappe.model, {\n\tnew_names: {},\n\tnew_name_count: {},\n\n\tget_new_doc: function(doctype, parent_doc, parentfield) {\n\t\tfrappe.provide(\"locals.\" + doctype);\n\t\tvar doc = {\n\t\t\tdocstatus: 0,\n\t\t\tdoctype: doctype,\n\t\t\tname: frappe.model.get_new_name(doctype),\n\t\t\t__islocal: 1,\n\t\t\t__unsaved: 1,\n\t\t\towner: user\n\t\t};\n\t\tfrappe.model.set_default_values(doc, parent_doc);\n\n\t\tif(parent_doc) {\n\t\t\t$.extend(doc, {\n\t\t\t\tparent: parent_doc.name,\n\t\t\t\tparentfield: parentfield,\n\t\t\t\tparenttype: parent_doc.doctype,\n\t\t\t});\n\t\t\tif(!parent_doc[parentfield]) parent_doc[parentfield] = [];\n\t\t\tdoc.idx = parent_doc[parentfield].length + 1;\n\t\t\tparent_doc[parentfield].push(doc);\n\t\t} else {\n\t\t\tfrappe.provide(\"frappe.model.docinfo.\" + doctype + \".\" + doc.name);\n\t\t}\n\n\t\tfrappe.model.add_to_locals(doc);\n\n\t\tif (!parent_doc) {\n\t\t\tdoc.__run_link_triggers = 1;\n\t\t}\n\n\t\treturn doc;\n\t},\n\n\tmake_new_doc_and_get_name: function(doctype) {\n\t\treturn frappe.model.get_new_doc(doctype).name;\n\t},\n\n\tget_new_name: function(doctype) {\n\t\tvar cnt = frappe.model.new_name_count\n\t\tif(!cnt[doctype])\n\t\t\tcnt[doctype] = 0;\n\t\tcnt[doctype]++;\n\t\treturn __('New') + ' '+ __(doctype) + ' ' + cnt[doctype];\n\t},\n\n\tset_default_values: function(doc, parent_doc) {\n\t\tvar doctype = doc.doctype;\n\t\tvar docfields = frappe.meta.docfield_list[doctype] || [];\n\t\tvar updated = [];\n\n\t\tfor(var fid=0;fid<docfields.length;fid++) {\n\t\t\tvar f = docfields[fid];\n\t\t\tif(!in_list(frappe.model.no_value_type, f.fieldtype) && doc[f.fieldname]==null) {\n\t\t\t\tvar v = frappe.model.get_default_value(f, doc, parent_doc);\n\t\t\t\tif(v) {\n\t\t\t\t\tif(in_list([\"Int\", \"Check\"], f.fieldtype))\n\t\t\t\t\t\tv = cint(v);\n\t\t\t\t\telse if(in_list([\"Currency\", \"Float\"], f.fieldtype))\n\t\t\t\t\t\tv = flt(v);\n\n\t\t\t\t\tdoc[f.fieldname] = v;\n\t\t\t\t\tupdated.push(f.fieldname);\n\t\t\t\t} else if(f.fieldtype == \"Select\" && f.options && typeof f.options === 'string'\n\t\t\t\t\t&& !in_list([\"[Select]\", \"Loading...\"], f.options)) {\n\t\t\t\t\t\tdoc[f.fieldname] = f.options.split(\"\\n\")[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn updated;\n\t},\n\n\tget_default_value: function(df, doc, parent_doc) {\n\t\tvar user_permissions = frappe.defaults.get_user_permissions();\n\t\tvar meta = frappe.get_meta(doc.doctype);\n\t\tvar has_user_permissions = (df.fieldtype===\"Link\" && user_permissions\n\t\t\t&& df.ignore_user_permissions != 1 && user_permissions[df.options]);\n\n\t\t// don't set defaults for \"User\" link field using User Permissions!\n\t\tif (df.fieldtype===\"Link\" && df.options!==\"User\") {\n\t\t\t// 1 - look in user permissions for document_type==\"Setup\".\n\t\t\t// We don't want to include permissions of transactions to be used for defaults.\n\t\t\tif (df.linked_document_type===\"Setup\"\n\t\t\t\t&& has_user_permissions && user_permissions[df.options].length===1) {\n\t\t\t\treturn user_permissions[df.options][0];\n\t\t\t}\n\n\t\t\t// 2 - look in user defaults\n\t\t\tvar user_default = frappe.defaults.get_user_default(df.fieldname);\n\t\t\tvar is_allowed_user_default = user_default &&\n\t\t\t\t(!has_user_permissions || user_permissions[df.options].indexOf(user_default)!==-1);\n\n\t\t\t// is this user default also allowed as per user permissions?\n\t\t\tif (is_allowed_user_default) {\n\t\t\t\treturn user_default;\n\t\t\t}\n\t\t}\n\n\t\t// 3 - look in default of docfield\n\t\tif (df['default']) {\n\n\t\t\tif (df[\"default\"] == \"__user\" || df[\"default\"] == \"user\") {\n\t\t\t\treturn user;\n\n\t\t\t} else if (df[\"default\"] == \"user_fullname\") {\n\t\t\t\treturn user_fullname;\n\n\t\t\t} else if (df[\"default\"] == \"Today\") {\n\t\t\t\treturn dateutil.get_today();\n\n\t\t\t} else if ((df[\"default\"] || \"\").toLowerCase() === \"now\") {\n\t\t\t\treturn dateutil.now_datetime();\n\n\t\t\t} else if (df[\"default\"][0]===\":\") {\n\t\t\t\tvar boot_doc = frappe.model.get_default_from_boot_docs(df, doc, parent_doc);\n\t\t\t\tvar is_allowed_boot_doc = !has_user_permissions || user_permissions[df.options].indexOf(boot_doc)!==-1;\n\n\t\t\t\tif (is_allowed_boot_doc) {\n\t\t\t\t\treturn boot_doc;\n\t\t\t\t}\n\t\t\t} else if (df.fieldname===meta.title_field) {\n\t\t\t\t// ignore defaults for title field\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\t// is this default value is also allowed as per user permissions?\n\t\t\tvar is_allowed_default = !has_user_permissions || user_permissions[df.options].indexOf(df[\"default\"])!==-1;\n\t\t\tif (df.fieldtype!==\"Link\" || df.options===\"User\" || is_allowed_default) {\n\t\t\t\treturn df[\"default\"];\n\t\t\t}\n\n\t\t} else if (df.fieldtype==\"Time\") {\n\t\t\treturn dateutil.now_time();\n\n\t\t}\n\t},\n\n\tget_default_from_boot_docs: function(df, doc, parent_doc) {\n\t\t// set default from partial docs passed during boot like \":User\"\n\t\tif(frappe.get_list(df[\"default\"]).length > 0) {\n\t\t\tvar ref_fieldname = df[\"default\"].slice(1).toLowerCase().replace(\" \", \"_\");\n\t\t\tvar ref_value = parent_doc ?\n\t\t\t\tparent_doc[ref_fieldname] :\n\t\t\t\tfrappe.defaults.get_user_default(ref_fieldname);\n\t\t\tvar ref_doc = ref_value ? frappe.get_doc(df[\"default\"], ref_value) : null;\n\n\t\t\tif(ref_doc && ref_doc[df.fieldname]) {\n\t\t\t\treturn ref_doc[df.fieldname];\n\t\t\t}\n\t\t}\n\t},\n\n\tadd_child: function(parent_doc, doctype, parentfield, idx) {\n\t\t// create row doc\n\t\tidx = idx ? idx - 0.1 : (parent_doc[parentfield] || []).length + 1;\n\n\t\tvar child = frappe.model.get_new_doc(doctype, parent_doc, parentfield);\n\t\tchild.idx = idx;\n\n\t\t// renum for fraction\n\t\tif(idx !== cint(idx)) {\n\t\t\tvar sorted = parent_doc[parentfield].sort(function(a, b) { return a.idx - b.idx; });\n\t\t\tfor(var i=0, j=sorted.length; i<j; i++) {\n\t\t\t\tvar d = sorted[i];\n\t\t\t\td.idx = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (cur_frm && cur_frm.doc == parent_doc) cur_frm.dirty();\n\n\t\treturn child;\n\t},\n\n\tcopy_doc: function(doc, from_amend, parent_doc, parentfield) {\n\t\tvar no_copy_list = ['name','amended_from','amendment_date','cancel_reason'];\n\t\tvar newdoc = frappe.model.get_new_doc(doc.doctype, parent_doc, parentfield);\n\n\t\tfor(var key in doc) {\n\t\t\t// dont copy name and blank fields\n\t\t\tvar df = frappe.meta.get_docfield(doc.doctype, key);\n\n\t\t\tif(df && key.substr(0,2)!='__'\n\t\t\t\t&& !in_list(no_copy_list, key)\n\t\t\t\t&& !(df && (!from_amend && cint(df.no_copy)==1))) {\n\t\t\t\t\tvar value = doc[key] || [];\n\t\t\t\t\tif(df.fieldtype===\"Table\") {\n\t\t\t\t\t\tfor(var i=0, j=value.length; i<j; i++) {\n\t\t\t\t\t\t\tvar d = value[i];\n\t\t\t\t\t\t\tfrappe.model.copy_doc(d, from_amend, newdoc, df.fieldname);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewdoc[key] = doc[key];\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnewdoc.__islocal = 1;\n\t\tnewdoc.docstatus = 0;\n\t\tnewdoc.owner = user;\n\t\tnewdoc.creation = '';\n\t\tnewdoc.modified_by = user;\n\t\tnewdoc.modified = '';\n\n\t\treturn newdoc;\n\t},\n\n\topen_mapped_doc: function(opts) {\n\t\tif (opts.frm && opts.frm.doc.__unsaved) {\n\t\t\tfrappe.throw(__(\"You have unsaved changes in this form. Please save before you continue.\"));\n\n\t\t} else if (!opts.source_name && opts.frm) {\n\t\t\topts.source_name = opts.frm.doc.name;\n\t\t}\n\n\t\treturn frappe.call({\n\t\t\ttype: \"POST\",\n\t\t\tmethod: opts.method,\n\t\t\targs: {\n\t\t\t\t\"source_name\": opts.source_name\n\t\t\t},\n\t\t\tfreeze: true,\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\tfrappe.model.sync(r.message);\n\t\t\t\t\tif(opts.run_link_triggers) {\n\t\t\t\t\t\tfrappe.get_doc(r.message.doctype, r.message.name).__run_link_triggers = true;\n\t\t\t\t\t}\n\t\t\t\t\tfrappe.set_route(\"Form\", r.message.doctype, r.message.name);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\n\tmap_current_doc_custom: function(opts) {\n\t\tif(opts.get_query_filters) {\n\t\t\topts.get_query = function() {\n\t\t\t\treturn {filters: opts.get_query_filters};\n\t\t\t}\n\t\t}\n\t\tvar _map = function() {\n\n\t\t\tvar test_list = [];\n\t\t\t$(\".frappe-control input:checkbox:checked\").each ( function() {\n\t\t\t\ttest_list.push($(this).val());\n\t\t\t});\n\n\t\t\treturn frappe.call({\n\t\t\t\ttype: \"POST\",\n\t\t\t\tmethod: opts.method,\n\t\t\t\targs: {\n\t\t\t\t\t\"source_name\": opts.source_name,\n\t\t\t\t\t\"target_doc\": cur_frm.doc,\n\t\t\t\t\t\"item_code\": opts.item_code,\n\t\t\t\t\t\"test_list\": test_list\n\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tvar doc = frappe.model.sync(r.message);\n\t\t\t\t\t\tcur_frm.refresh();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif(opts.source_doctype) {\n\t\t\tvar d = new frappe.ui.Dialog({\n\t\t\t\ttitle: __(\"Get From \") + __(opts.source_doctype),\n\t\t\t\tfields: [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"fieldname\": \"item_code\",\n\t\t\t\t\t\t\"fieldtype\": \"Link\", \n\t\t\t\t\t\t\"options\":\"Item\",\n\t\t\t\t\t\t\"label\": \"Item Code\",\n\t\t\t\t\t\t'reqd': 1\n\t\t\t\t\t},\n\t\t    \t\t{'fieldname': 'test', 'fieldtype': 'HTML', 'label': 'test', 'reqd': 0},\n\t\t\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"fieldtype\": \"Button\",\n\t\t\t\t\t\t\"label\": __(\"Get\"),\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\tvar values = d.get_values();\n\t\t\t\t\t\t\tif(!values)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\topts.source_name = values[opts.source_doctype];\n\t\t\t\t\t\t\topts.item_code = values.item_code;\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t\t_map();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t})\n\t\t\td.show();\n\t\td.get_input(\"item_code\").on(\"awesomplete-close\",function(){\n\n\n\t\t// d.get_input(\"item_code\").on(\"change\", function() {\n\t\tvar item_code = d.get_value(\"item_code\");\n        \n        if(!cur_frm.doc.customer){\n        \tmsgprint(\"Please select Customer\");\n        }\n        else{\n        \t\t\t\t frappe.call({\n\t\t\tmethod: \"luma.custom_method.custom_method.get_so_details\",\n\t\t\ttype: \"GET\",\n\t\t\targs: {\n\t\t\t\t\"item_code\": item_code,\n\t\t\t\t\"customer\":cur_frm.doc.customer,\n\t\t\t},\n\t\t\tcallback: function(r){\n\t\t\t\tif(r.message){\n\t\t\t\t\tme.item_code = r.message;\n                    $('.frappe-control input:checkbox').removeAttr('checked');\n\n\t\t\t\t    html=\"\"\n\t\t\t\t    table=\"\"\n\t\t\t\t    html += '<div class=\"testCont\"  style=\"max-height: 200px;overflow: auto;overflow-x: hidden;min-height:150px\">'\n\t\t\t\t\thtml+=\"<form><table class='table table-bordered' id='mytable' width=80%>\\\n\t\t\t\t\t      <thead class='grid-heading-row'>\\\n\t\t\t\t\t      <tr><th class='text-center'>Sales Order</th>\\\n\t\t\t\t\t      <th class='text-center'>SO Qty</th>\\\n\t\t\t\t\t      <th class='text-center'>Price</th>\\\n\t\t\t\t\t      <th class='text-center'>Delivered Qty</th>\\\n\t\t\t\t\t      <th class='text-center'>Expected Delivery Date</th></tr>\\\n\t\t\t\t\t      </thead>\\\n\t\t\t\t\t      <tbody>\"\n\t\t\t\t\tfor (var i = 0; i<r.message.get_test_data.length; i=i+1) {\n\t\t\t\t\t     html+=\"<tr>\\\n\t\t\t\t\t      <td class='text-center'><label style='font-weight: normal;'><input type='checkbox' class='select' id='_select' name='\"+r.message.get_test_data[i][0]+\"' value='\"+r.message.get_test_data[i][0]+\"'> \"+r.message.get_test_data[i][0]+ \"</label></td>\\\n\t\t\t\t\t      <td class='text-right'>\"+r.message.get_test_data[i][1]+' '+r.message.get_test_data[i][5]+\"</td>\\\n\t\t\t\t\t      <td class='text-right'>\"+r.message.get_test_data[i][6]+' '+r.message.get_test_data[i][2]+\"</td>\\\n\t\t\t\t\t      <td class='text-right'>\"+r.message.get_test_data[i][3]+' '+r.message.get_test_data[i][5]+\"</td>\\\n\t\t\t\t\t      <td class='text-center'>\"+frappe.datetime.str_to_user(r.message.get_test_data[i][4]) +\"</td>\\\n\t\t\t\t\t      </tr>\";\n\n\t\t\t\t\t}\n\n\t\t\t\t\t     html+=\"</tbody>\\\n\t\t\t\t\t      </table></form><br>\";\n\n\t\t\t\t   \thtml += '</div>'\t\n                  \tvar wrapper = d.fields_dict.test.$wrapper;\n                  \twrapper.empty();\n\t\t\t\t\twrapper.html(html);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n        }\n\t\treturn false;\n\t});\n\n\t\t} else if(opts.source_name) {\n\t\t\t_map();\n\t\t}\n\t}\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Receipt", 
  "modified": "2018-06-04 14:51:05.305972", 
  "name": "Purchase Receipt-Client", 
  "script": "frappe.ui.form.on(\"Purchase Receipt\", \"refresh\", function(frm) {\n\tif (frm.doc.docstatus===0) {\n        if(cur_frm.doc.__islocal){\n            if (cur_frm.doc.items.length == 1){\n                if(!cur_frm.doc.items[0].item_code){\n                    cur_frm.set_value(\"items\",[])\n                }\n                \n            }\n\t\t}\n\t\tcur_frm.add_custom_button(__('Get Purchase Order Items'), \n\t\t\tfunction() {\n                if(cur_frm.doc.__islocal){\n                    if (cur_frm.doc.items.length == 1){\n                        if(!cur_frm.doc.items[0].item_code){\n                            cur_frm.set_value(\"items\",[])\n                        }\n                        \n                    }\n                }\n                \n\t\t\t\tif(cur_frm.doc.supplier){\n\t\t\t\t\tfrappe.model.map_current_doc_custom({\n\t\t\t\t\t\tmethod: \"luma.custom_method.custom_method.make_purchase_receipt\",\n\t\t\t\t\t\titem_code: \"abc\",\n\t\t\t\t\t\tsource_doctype: \"Purchase Order\",\n\t\t\t\t\t\tget_query_filters: {\n\t\t\t\t\t\t\tdocstatus: 1,\n\t\t\t\t\t\t\tstatus: [\"not in\", [\"Stopped\", \"Closed\"]],\n\t\t\t\t\t\t\tper_delivered: [\"<\", 99.99],\n\t\t\t\t\t\t\tproject_name: cur_frm.doc.project_name || undefined,\n\t\t\t\t\t\t\tsupplier: cur_frm.doc.supplier || undefined,\n\t\t\t\t\t\t\tcompany: cur_frm.doc.company\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmsgprint(\"Please Select Suplier First\")\n\t\t\t\t}\n\t\t\t});\n\t}\n\tif(cur_frm.doc.__islocal && !cur_frm.doc.amended_from){\n\t\t// cur_frm.set_value(\"items\", []);\n\t}\n});\n\nfrappe.provide(\"frappe.model\");\n\n$.extend(frappe.model, {\n\tmap_current_doc_custom: function(opts) {\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Get \") + __(opts.source_doctype),\n\t\t\tfields: [\n\t\t\t\t{\"fieldtype\": \"Link\", \"label\": __(\"Items\"), \"fieldname\": \"item_code\",\"options\":'Item',\"reqd\": 1,\n\t\t\t\t\tget_query: function() {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tquery:\"luma.custom_method.custom_method.filter_items\",\n\t\t\t\t\t\t\tfilters:{\n\t\t\t\t\t\t\t\t\"supplier\":cur_frm.doc.supplier\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t}, \n\t\t\t\t},\n\t    \t\t{'fieldname': 'test', 'fieldtype': 'HTML', 'label': 'test', 'reqd': 0},\n\t\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t\t{\n\t\t\t\t\t\"fieldtype\": \"Button\",\n\t\t\t\t\t\"label\": __(\"Add\"),\n\t\t\t\t\tclick: function() {\n\t\t\t\t\t\tvar ckd_list = []\n\t\t\t\t\t\tvar poi_row_list = [];\n\t\t\t\t\t\tvar values = d.get_values();\n\t\t\t\t\t\t$.each($(cur_dialog.fields_dict.test.$wrapper).find(\".select\"), function(i,v){\n\t\t\t\t\t\t\tif(v.checked){\n\t\t\t\t\t\t\t\tckd_list.push(v.name)\n\t\t\t\t\t\t\t\tpoi_row_list.push(v.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif(!values)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\topts.source_name = \"\";\n\t\t\t\t\t\topts.item_code = values.item_code;\n\t\t\t\t\t\td.hide();\n\t\t\t\t\t\tconsole.log(\"@@@@@@@@@@@@\",poi_row_list)\n\t\t\t\t\t\tfrappe.model._map(ckd_list, opts, poi_row_list)\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t\td.show();\n\t\td.get_input(\"item_code\").on(\"awesomplete-close\",function(){\n\t\t\tvar item_code = d.get_value(\"item_code\");\n\t        if(item_code){\n\t        \tfrappe.call({\n\t\t\t\t\tmethod: \"luma.custom_method.custom_method.get_po_details\",\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\t\"item_code\": item_code,\n\t\t\t\t\t\t\"supplier\":cur_frm.doc.supplier,\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function(r){\n\t\t\t\t\t\tif(r.message){\n\t\t\t\t\t\t\tme.item_code = r.message;\n\t\t                    $('.frappe-control input:checkbox').removeAttr('checked');\n\t\t\t\t\t\t    html=\"\"\n\t\t\t\t\t\t    table=\"\"\n\t\t\t\t\t\t    html += '<div class=\"testCont\"  style=\"max-height: 200px;overflow: auto;overflow-x: hidden;min-height:150px\">'\n\t\t\t\t\t\t\thtml+=\"<form><table class='table table-bordered' id='mytable' width=80%>\\\n\t\t\t\t\t\t\t      <thead class='grid-heading-row'>\\\n\t\t\t\t\t\t\t      <tr><th class='text-center'>Purchase Order</th>\\\n\t\t\t\t\t\t\t      <th class='text-center'>Pending Qty</th>\\\n\t\t\t\t\t\t\t      <th class='text-center'>Price</th>\\\n\t\t\t\t\t\t\t      <th class='text-center'>Total</th>\\\n\t\t\t\t\t\t\t      <th class='text-center'>PO Date</th></tr>\\\n\t\t\t\t\t\t\t      </thead>\\\n\t\t\t\t\t\t\t      <tbody>\"\n\t\t\t\t\t\t\tfor (var i = 0; i<r.message.get_test_data.length; i=i+1) {\n\t\t\t\t\t\t\t     html+=\"<tr>\\\n\t\t\t\t\t\t\t      <td class='text-center'><label style='font-weight: normal;'>\\\n\t\t\t\t\t\t\t      <input type='checkbox' class='select' id='\"+r.message.get_test_data[i][7]+\"' name='\"+r.message.get_test_data[i][0]+\"' value='\"+r.message.get_test_data[i][0]+\"'> \"+r.message.get_test_data[i][0]+ \"</label></td>\\\n\t\t\t\t\t\t\t      <td class='text-right'>\"+r.message.get_test_data[i][3]+' '+r.message.get_test_data[i][5]+\"</td>\\\n\t\t\t\t\t\t\t      <td class='text-right'>\"+r.message.get_test_data[i][2]+\"</td>\\\n\t\t\t\t\t\t\t      <td class='text-right'>\"+r.message.get_test_data[i][2]*r.message.get_test_data[i][3]+\"</td>\\\n\t\t\t\t\t\t\t      <td class='text-center'>\"+frappe.datetime.str_to_user(r.message.get_test_data[i][4]) +\"</td>\\\n\t\t\t\t\t\t\t      </tr>\";\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\thtml+=\"</tbody></table></form><br></div>\";\t\n\t\t                  \tvar wrapper = d.fields_dict.test.$wrapper;\n\t\t                  \twrapper.empty();\n\t\t\t\t\t\t\twrapper.html(html);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t        }\n\t\t});\n\t},\n\t_map:function(chkd_value, opts, poi_row_list) {\n\t\tvar test_list = [];\n\t\ttest_list = chkd_value\n\t\tfrappe.model.set_value(\"items\",\"\")\n\t\treturn frappe.call({\n\t\t\ttype: \"POST\",\n\t\t\tmethod: opts.method,\n\t\t\targs: {\n\t\t\t\t\"source_name\": opts.source_name,\n\t\t\t\t\"target_doc\": cur_frm.doc,\n\t\t\t\t\"item_code\": opts.item_code,\n\t\t\t\t\"po_list\": test_list,\n\t\t\t\t\"po_row_list\": poi_row_list \n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\tvar doc = frappe.model.sync(r.message);\n\t\t\t\t\tcur_frm.refresh_field(\"items\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Production Order", 
  "modified": "2017-06-09 12:43:45.035433", 
  "name": "Production Order-Client", 
  "script": "frappe.ui.form.on(\"Production Order\", \"onload\", function(frm) {\n   if(cur_frm.doc.custom_manufactured_qty){\n    console.log(\"in my script\")\n   var qty = cur_frm.doc.custom_manufactured_qty + cur_frm.doc.produced_qty \n   cur_frm.doc.total_manufactured_qty = qty\n   refresh_field(\"total_manufactured_qty\")\n}\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Item", 
  "modified": "2017-06-09 19:52:51.594976", 
  "name": "Item-Client", 
  "script": "frappe.ui.form.on(\"Item\", \"onload\", function(frm){\n\tif(!cur_frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"luma.custom_method.custom_method.get_general_enquiry\",\n\t\t\targs: {\n\t\t\t\titem_code: frm.doc.item_code\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tfrm.doc.sales_orders = frappe.render_template(\"sales_order_details\", {\n\t\t\t\t\t\"items\": r.message.sales_orders,\n\t\t\t\t});\n\t\t\t\tcur_frm.refresh_fields();\n\n\t\t\t\tfrm.doc.purchase_orders = frappe.render_template(\"purchase_order_details\", {\n\t\t\t\t\t\"items\": r.message.purchase_orders,\n\t\t\t\t});\n\t\t\t\tcur_frm.refresh_fields();\n\n\t\t\t\tfrm.doc.production_orders = frappe.render_template(\"production_order_details\", {\n\t\t\t\t\t\"items\": r.message.production_orders,\n\t\t\t\t});\n\t\t\t\tcur_frm.refresh_fields();\n\t\t\t}\n\t\t});\n\t}\t\n});\n\nfrappe.ui.form.on(\"Item\", {\n\trefresh: function(frm) {\n\t\tfrm.fields_dict['outer_box_code'].get_query = function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: { \"item_group\": \"Box\"}\n\t\t\t}\n\t\t}\n\t\tfrm.fields_dict['inner_box_code'].get_query = function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: { \"item_group\": \"Box\"}\n\t\t\t}\n\t\t}\n\n\t},\n\tcardboard_code: function(frm){\n\tif (frm.doc.cardboard_code.length>20)\n\t\tfrappe.throw(__(\"Cardboard code length must be upto 20 \"));\t\t}\n});\n\nfrappe.ui.form.on(\"Item\", \"item_group\", function(frm){\n\tif(cur_frm.doc.item_group != \"Box\"){\n\t\t\n\t\tcur_frm.set_df_property(\"outer_box_code\",\"hidden\",0)\n\t\tcur_frm.set_df_property(\"inner_box_code\",\"hidden\",0)\n\t\tcur_frm.set_df_property(\"outer_box_pcs\",\"hidden\",0)\n\t\tcur_frm.set_df_property(\"inner_box_pcs\",\"hidden\",0)\n\t}\n\tif(cur_frm.doc.item_group == \"Box\"){\n\t\t\n\t\tcur_frm.set_df_property(\"outer_box_code\",\"hidden\",1)\n\t\tcur_frm.set_df_property(\"inner_box_code\",\"hidden\",1)\n\t\tcur_frm.set_df_property(\"outer_box_pcs\",\"hidden\",1)\n\t\tcur_frm.set_df_property(\"inner_box_pcs\",\"hidden\",1)\n\t}\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Order", 
  "modified": "2018-03-22 17:24:34.531741", 
  "name": "Purchase Order-Client", 
  "script": "cur_frm.add_fetch('outer_box_code1', 'description', 'outer_box_description12');\ncur_frm.add_fetch('item_code','sales_item_reference', 'item_reference');\n\nfrappe.ui.form.on(\"Purchase Order\", {\n\trefresh: function(doc, dt, dn) {\n\t\tif(this.cur_frm.doc.status==\"Closed\") {\n\t\t\tcur_frm.add_custom_button(__('Make New Production Order'),function() {\n\t\t\t\tmake_new_po();\n\t\t\t})\n\t\t}\n\t},\n\tonload: function(doc, dt, dn) {\n\t\tif (cur_frm.doc.__islocal && cur_frm.doc.parent_name) {\n\t\t\tupdate_qty_of_items();\n\t\t}\n\t},\n\tvalidate: function(frm) {\n\t\tif(cur_frm.doc.__islocal  && cur_frm.doc.parent_name != null){\n\t\t\tconsole.log(\"after_save\")\n\t\t\tconsole.log(cur_frm.doc.name,\"name\")\n\t\t\tupdate_parent_po();\n\t\t}\n\t}\t\n});\n\n\nupdate_parent_po = function(){\n\tfrappe.call({    \n\t\tmethod: \"luma.custom_method.custom_method.update_parent_po\",\n\t\targs: {\n\t\t\t\"po\":cur_frm.doc.parent_name\n\t\t},\n\t\tcallback: function(r){\n\t\t\tif(r && r.message){\n\t\t\t\tconsole.log(r.message) \n\t\t\t}\n\t\t}\n\t});\n}\n\nmake_new_po = function(){\n\tfrappe.model.open_mapped_doc({\n\t\tmethod: \"luma.custom_method.custom_method.make_new_po\",\n\t\tfrm: cur_frm\n\t})\n}\n\n\nupdate_qty_of_items = function(){\n\tconsole.log(\"in update_qty_of_items\")\n\tfor(i=0;i<cur_frm.doc.items.length;i++){\n\t    if(cur_frm.doc.items[i]['qty']){\n\t        get_received_qty(cur_frm.doc.items[i]['idx'],i);\n\t    }\n\t}    \n}\n\nget_received_qty = function(idx,i){\n\tfrappe.call({    \n\t\tmethod: \"frappe.client.get_list\",\n\t   \targs: {\n\t    \tdoctype: \"Purchase Order Item\",\n\t       \tfields: [\"received_qty\"],\n\t       \tfilters: { 'parent': cur_frm.doc.parent_name,\n\t        \t\t\t'idx': idx\n\t        \t},\n\t\t\t},\n\t\t\tcallback: function(res){\n\t\t\tif(res && res.message){\n\t\t\t\tconsole.log(res.message[0]['received_qty'],\"sdkjsdfkjsdfksdjk\")\n\t\t\t\tcur_frm.doc.items[i]['qty'] = cur_frm.doc.items[i]['qty'] - res.message[0]['received_qty']\ncur_frm.doc.items[i]['amount'] = 0\n\t\t\t    refresh_field(\"items\")\n\t\t\t}\n\t\t}\n\t});\n}\n\n\n\nfrappe.ui.form.on(\"Purchase Order Item\", {\n\titem_code:function(frm,cdt,cdn){\n\n\t\tvar d = locals[cdt][cdn];\n\t\tif (d.item_code){\n\t\t\tget_item_data(d)\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"outer_box_code1\",\"\")\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"outer_box_description12\",\"\")\n\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"inner_box_pcs\", 0)\n\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"outer_box_pcs\", 0)\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"item_net_weight1\",\"\")\n\n\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"outer_box_qty\",0)\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"inner_box_qty\",0)\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"total_volume\",0.00)\n\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"total_net_weight\",0.00)\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"total_gross_weight1\",0.00)\n\n\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"length_new\",0.00)\n\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"width\",0.00)\n\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"height\",0.00)\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"outer_box_weight\",0.00)\n\t\t\tfrappe.model.set_value(d.doctype, d.name,\"inner_box_weight\",0.00)\n\t\t}\n\t\tfrm.refresh_field(\"items\")\n\t},\n\tqty:function(frm,cdt,cdn){\n\t\tvar d = locals[cdt][cdn]\n\t\tif(d.qty && d.item_code){\n\t\t\tget_item_data(d)\n\t\t\tfrm.refresh_field(\"items\")\n\n\t\t}\n\t}\n});\n\n\nvar get_item_data = function(row){\n\tvar data \n\tvar item_code\n\tif(row.item_reference){\n\t\titem_code = row.item_reference\n\t}\n\telse{\n\t\titem_code = row.item_code\n\t}\n\tconsole.log(\"check tem\",item_code)\n\tfrappe.call({\n\t\t\tmethod: \"luma.custom_method.custom_method.get_outerbox_item\",\n\t\t\targs: {\n\t\t\t\t\"item_code\": item_code\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.message) {\n\t\t\t\t\tset_data(row, r.message)\n\t\t\t\t\tcalculate_field_data(row)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\treturn data\n}\n\nvar calculate_field_data = function(d){\n\tvar dict;\n\tvar total_volume;\n\tvar total_gross_wt = (d.qty*d.item_net_weight1) + ((d.qty/d.outer_box_pcs) * d.outer_box_weight ) + ((d.qty/d.inner_box_pcs) * d.inner_box_weight) \n\ttotal_volume = (d.length_new * d.width * d.height *(d.qty/d.outer_box_pcs))/1000000000\n\t\tdict = {\n\t\t\t\"inner_box_qty\": flt(d.qty/d.inner_box_pcs),\n\t\t\t\"outer_box_qty\": flt((d.qty/d.outer_box_pcs).toFixed(2)),\n\t\t\t\"total_gross_wt\": total_gross_wt || 0.0,\n\t\t\t\"total_net_weight\": d.qty*d.item_net_weight1 || 0.0,\n\t\t\t\"total_volume\": total_volume || 0.0,\n\t\t}\n\tfrappe.model.set_value(d.doctype, d.name, \"total_volume\",dict['total_volume'])\n\tfrappe.model.set_value(d.doctype, d.name, \"total_gross_weight1\",dict['total_gross_wt'])\n\tfrappe.model.set_value(d.doctype, d.name, \"total_net_weight\",dict['total_net_weight'])\n\t// return dict\n}\n\n\nvar set_data = function(row, data){\n\tfrappe.model.set_value(row.doctype, row.name,\"inner_box_pcs\",data['inner_box_pcs'] )\n\tfrappe.model.set_value(row.doctype, row.name,\"outer_box_pcs\",data['outer_box_pcs'] )\n\tfrappe.model.set_value(row.doctype, row.name,\"item_net_weight1\",data['item_net_weight'] )\n\n\tfrappe.model.set_value(row.doctype, row.name,\"outer_box_code1\",data['outer_box_code'] )\n\tfrappe.model.set_value(row.doctype, row.name, \"outer_box_description12\", data['description'])\n\tif(row.outer_box_pcs){\n\t\tfrappe.model.set_value(row.doctype, row.name,\"outer_box_qty\",flt(row.qty/ flt(row.outer_box_pcs) ).toFixed(2) )\n\t}else{\n\t\tfrappe.model.set_value(row.doctype, row.name,\"outer_box_qty\",0.00 )\n\t}\n\t\n\tif(row.inner_box_pcs){\n\t\tfrappe.model.set_value(row.doctype, row.name,\"inner_box_qty\",flt(row.qty/ flt(row.inner_box_pcs) ).toFixed(2) )\n\t}\n\telse{\n\t\tfrappe.model.set_value(row.doctype, row.name,\"inner_box_qty\",0.00)\n\t}\n\t\n\tfrappe.model.set_value(row.doctype, row.name,\"length\",data['outbox_length'] || 0.00)\n\tfrappe.model.set_value(row.doctype, row.name,\"length_new\",data['outbox_length'] || 0.00)\n\n\tfrappe.model.set_value(row.doctype, row.name,\"width\",data['outbox_width'] || 0.00)\n\tfrappe.model.set_value(row.doctype, row.name,\"height\",data['outbox_height'] || 0.00)\n\tfrappe.model.set_value(row.doctype, row.name,\"outer_box_weight\",data['outbox_wt'] || 0.00)\n\tfrappe.model.set_value(row.doctype, row.name,\"inner_box_weight\",data['inbox_wt']|| 0.00)\n}", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Stock Entry", 
  "modified": "2017-06-09 12:43:44.928529", 
  "name": "Stock Entry-Client", 
  "script": "frappe.ui.form.on(\"Stock Entry\", {\n\trefresh: function(doc, dt, dn) {\n\t\tif(cur_frm.doc.__islocal && !cur_frm.doc.amended_from){\n\t\t\tcur_frm.set_value(\"items\", []);\n\t\t}\n\t\tif (this.cur_frm.doc.docstatus===0) {\n\t\t\t// Get Items from Purchase Order\n\t\t\t/*cur_frm.add_custom_button(__('Get Items from Purchase Order'),\n\t\t\t\tfunction() {\n\t\t\t\tvar me = this;\n\t\t\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\t\t\ttitle: \"Get Items from Purchase Order\",\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\"fieldtype\": \"Link\", \"label\": __(\"Supplier\"), \"fieldname\": \"supplier\",\"options\":'Supplier',\"reqd\": 1 },\n\t\t\t\t\t\t{\"fieldtype\": \"Link\", \"label\": __(\"Items\"), \"fieldname\": \"item\",\"options\":'Item',\"reqd\": 1,\n\t\t\t\t\t\t\tget_query: function() {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tquery:\"luma.custom_method.custom_method.filter_items\",\n\t\t\t\t\t\t\t\t\tfilters:{\n\t\t\t\t\t\t\t\t\t\t\"supplier\":cur_dialog.fields_dict.supplier.$input.val()\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\"fieldtype\": \"Button\", \"label\": __(\"Get\"), \"fieldname\": \"get\"},\n\t\t\t\t\t\t{\"fieldtype\": \"HTML\", \"fieldname\": \"po_items_details\"},\n\t\t\t\t\t],\n\t\t\t\t\tprimary_action_label: \"ADD\",\n           \t\t\tprimary_action: function(){\n                \t\tadd_po_items_to_stock(me.dialog)\n                \t}\n\t\t\t\t});\n\t\t\t\tme.dialog.show();\n\t\t\t\tfd = this.dialog.fields_dict;\n\t\t\t\tthis.dialog.fields_dict.get.$input.click(function() {\n\t\t\t\t\tvalue = me.dialog.get_values();\n\t\t\t\t\tconsole.log(value.supplier,\"supplier\")\n\t\t\t\t\tconsole.log(value.item,\"item\")\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"luma.custom_method.custom_method.get_items_from_po\",\n\t\t\t\t\t\targs:{\n\t\t\t\t\t\t\t\"supplier\":value.supplier,\n\t\t\t\t\t\t\t\"item_code\":value.item\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tconsole.log(r.message)\n\t\t\t\t\t\t\tif(r.message){\n\t\t\t\t\t\t\t\tconsole.log(r.message.length,\"lengthttttttt\")\n\t\t\t\t\t\t\t\thtml = \"<table class='table' id='tr-table'><thead><tr class='row'>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Item code</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Description</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Purchase Order No.</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Pending QTY</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Price</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Total</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Date Of Purchase</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'></td></tr></thead>\"\n\t\t\t\t\t\t\t\thtml +=\t\"<tbody class='tr-tbody'>\"\n\t\t\t  \t\t\t\t\n\t\t\t  \t\t\t\t\tfor (var i = 0; i <r.message.length; i = i+1) {\n\t\t\t\t\t\t\t\t\tif(r.message[i]['qty'] > 0){\n\t\t\t\t\t\t\t\t\t\thtml+=\"<tr class='row'>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['item_code']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['description']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['name']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['qty']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['price_list_rate']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['amount']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['transaction_date']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><input type='checkbox' class='select' id='_select' value='\"+r.message[i]['name']+\"'></td>\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if(r.message.length == 1 && r.message[i]['qty'] == 0){\n\t\t\t\t\t\t\t\t\t\tmsgprint(\"No Pending Qty From Any Purchase Order, Against \" + \" - \"+r.message[i]['item_code']);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t  \t\t\t\t\t\t\thtml += \"</tr></tbody></table>\"\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t\t$(fd.po_items_details.$wrapper).empty()\n\t\t                    $(fd.po_items_details.$wrapper).append(html)\n\t\t                    me.dialog.show();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tadd_po_items_to_stock = function(){\n\t\t\t\t\tvar items_to_add = []\n\t\t            value = me.dialog.get_values();\n\t\t            item_code = value.item;\n\t\t            $.each($(fd.po_items_details.wrapper).find(\".select:checked\"), function(name, item){\n\t\t                items_to_add.push($(item).val());\n\t\t            });\n\t\t            if(items_to_add.length > 0){\n\t\t                for(i=0;i<items_to_add.length;i++){\n\t\t                \tadd_po_items(items_to_add,item_code,i)\n\t\t            \t}\n\t\t            \tme.dialog.hide()\n\t\t            }\t\n\t\t            else{\n\t\t                msgprint(\"Select Item Before Add\")\n\t\t            }\n\t\t\t\t}\n\t\t\t});*/\n\n\n\t\t\t// Get Items from Production Order\n\t\t\tcur_frm.add_custom_button(__('Get Items from Production Order'),function() {\n\t\t\t\tcur_frm.set_value(\"purpose\",\"Manufacture\")\n\t\t\t\t/*cur_frm.set_df_property(\"from_bom\",\"hidden\",1)\n\t\t\t\tcur_frm.set_df_property(\"production_order\",\"hidden\",1)\n\t\t\t\tcur_frm.set_df_property(\"from_warehouse\",\"hidden\",1)\t\n\t\t\t\tcur_frm.set_df_property(\"to_warehouse\",\"hidden\",1)*/\n\t\t\t\tvar me = this;\n\t\t\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\t\t\ttitle: \"Get Items from Production Order\",\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\"fieldtype\": \"Link\", \"label\": __(\"Production Order Item\"), \"fieldname\": \"production_order_item\",\"options\":'Item',\"reqd\": 1, \n\t\t\t\t\t\t\tget_query: function() {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tquery:\"luma.custom_method.custom_method.filter_production_items\",\n\t\t\t\t\t\t\t\t\t/*filters:{\n\t\t\t\t\t\t\t\t\t\t\"docstatus\":1\n\t\t\t\t\t\t\t\t\t},*/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/*{\"fieldtype\": \"Link\", \"label\": __(\"Production Order\"), \"fieldname\": \"production_order\",\"options\":'Production Order',\"reqd\": 1, \n\t\t\t\t\t\t\tget_query: function() {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tfilters:{\n\t\t\t\t\t\t\t\t\t\t\"docstatus\":1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},*/\n\t\t\t\t\t\t{\"fieldtype\": \"Button\", \"label\": __(\"Get\"), \"fieldname\": \"get\"},\n\t\t\t\t\t\t{\"fieldtype\": \"HTML\", \"fieldname\": \"production_order_items_details\"},\n\t\t\t\t\t],\n\t\t\t\t\tprimary_action_label: \"ADD\",\n           \t\t\tprimary_action: function(){\n                \t\tadd_production_order_items_to_stock()\n                \t\t/*add_production_order_items_to_stock(me.dialog,fd)*/\n                \t\t/*me.hide_dialog()*/\n                \t}\n\t\t\t\t});\n\t\t\t\tme.dialog.show();\n\t\t\t\tfd = this.dialog.fields_dict;\n\t\t\t\tthis.dialog.fields_dict.get.$input.click(function() {\n\t\t\t\t\tvalue = me.dialog.get_values();\n\t\t\t\t\tconsole.log(value.production_order_item,\"production_item\")\n\t\t\t\t\t/*console.log(value.production_order,\"production_order\")*/\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"luma.custom_method.custom_method.get_items_from_production_order\",\n\t\t\t\t\t\targs:{\n\t\t\t\t\t\t\t\"item_code\":value.production_order_item\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tconsole.log(r.message)\n\t\t\t\t\t\t\tconsole.log(r.message.length,\"length\")\n\t\t\t\t\t\t\tif(r.message){\n\t\t\t\t\t\t\t\thtml = \"<table class='table' id='tr-table'><thead><tr class='row'>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Item code</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center' style='width:57%'><b>Description</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Production Order No.</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Pending QTY</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center' style='width:100%'><b>Date</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><b>Produced QTY</b></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'></td></tr></thead>\"\n\t\t\t\t\t\t\t\thtml +=\t\"<tbody class='tr-tbody'>\"\n\t\t\t  \t\t\t\t\n\t\t\t  \t\t\t\t\tfor (var i = 0; i <r.message.length; i = i+1) {\n\t\t\t\t\t\t\t\t\tif(r.message[i]['qty'] > 0){\n\t\t\t\t\t\t\t\t\t\thtml+=\"<tr class='row'>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['item_code']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['description']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['name']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['qty']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'>\"+r.message[i]['date']+\"</td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><input type='number' class='received' id='\"+r.message[i]['name']+\"' style='width:79%' min = '1' max='\"+r.message[i]['qty']+\"' step='any'></td>\\\n\t\t\t\t\t\t\t\t\t\t<td align='center'><input type='radio' class='select' id='_select' value='\"+r.message[i]['name']+\"' name='_select'></td>\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if(r.message.length == 1 && r.message[i]['qty'] == 0){\n\t\t\t\t\t\t\t\t\t\tmsgprint(\"No Pending Qty From Any Production Order, Against \" + \" - \"+r.message[i]['item_code']);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t  \t\t\t\t\t\t\thtml += \"</tr></tbody></table>\"\n\t\t                \t}    \n  \t\t\t\t\t\t\t$(fd.production_order_items_details.$wrapper).empty()\n\t\t                    $(fd.production_order_items_details.$wrapper).append(html)\n\t\t                    /*$(fd.production_order_items_details.$wrapper).find('.received').change(function(){\n\t\t                \t\tif(parseFloat($('.received').val()) <= 0){\n\t\t\t\t\t\t\t\t\t$(this).val(1)\n\t\t\t\t\t\t\t\t}    \t\n\t\t                    })*/\n\t\t                    prevent_negative_produced_qty()\n\t\t                    me.dialog.show();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tprevent_negative_produced_qty = function(){\n\t\t\t\t\tconsole.log($(fd.production_order_items_details.$wrapper).find('.received'))\n\t\t\t\t\tconsole.log(\"in prevent_negative_produced_qty\")\n\t\t\t\t\t$(fd.production_order_items_details.$wrapper).find('.received').change(function(){\n\t\t\t\t\t\tconsole.log($(this).attr('max'),\"max\")\n\t\t\t\t\t\tif(parseFloat($(this).val()) <= 0 || parseFloat($(this).val()) > parseFloat($(this).attr('max'))){\n\t\t\t\t\t\t\t$(this).val(1)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\t\n\t\t\t\tadd_production_order_items_to_stock = function(){\n\t\t            value = me.dialog.get_values();\n\t\t\t\t\tvar production_order = $(fd.production_order_items_details.wrapper).find(\"input[type='radio']:checked\").val()\n\n\t\t            $.each($(fd.production_order_items_details.wrapper).find(\".received\"), function(name, item){\n\t\t                if(parseFloat($(this).val()) > 0 && $(this).attr(\"id\") == production_order){\n\t\t                \tproduced_qty = $(item).val();\n\t\t            \t}\n\t\t            });\n\t\t            console.log(produced_qty,\"produced_qty_list\")\n\t\t            console.log(production_order,\"list of production_order\")\n\t\t            if(production_order){\n\t\t                add_production_order_items(production_order,produced_qty)\n\t\t            \tme.dialog.hide()\n\t\t            }\t\n\t\t            else{\n\t\t                msgprint(\"Select Item Before Add\")\n\t\t            }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\tpurpose:function(frm){\n\t\tcur_frm.set_df_property(\"from_bom\",\"hidden\",0)\n\t\tcur_frm.set_df_property(\"production_order\",\"hidden\",0)\n\t\tcur_frm.set_df_property(\"from_warehouse\",\"hidden\",0)\t\n\t\tcur_frm.set_df_property(\"to_warehouse\",\"hidden\",0)\n\t},\n\ton_submit: function() {\n\t\tupdate_po = []\n\t\tpurchase_order_items = {}\n\t\tupdate_production_order = []\n\t\tproduction_order_items = {}\n\t\tif(cur_frm.doc.items){\n\t\t\tfor(var i = 0 ; i < cur_frm.doc.items.length ; i++){\n                if(cur_frm.doc.items[i].purchase_order){\n                \tpurchase_order_items = {\n                \t\t\t\t\t\t\t'purchase_order':cur_frm.doc.items[i].purchase_order,\n                \t\t\t\t\t\t\t'item_code':cur_frm.doc.items[i].item_code,\n                \t\t\t\t\t\t\t'qty':cur_frm.doc.items[i].qty\n                \t\t\t\t\t\t}\n                    update_po.push(purchase_order_items);\n                }\n                if(cur_frm.doc.items[i].production_order){\n                \tproduction_order_items = {\n                \t\t\t\t\t\t\t'production_order':cur_frm.doc.items[i].production_order,\n                \t\t\t\t\t\t\t'item_code':cur_frm.doc.items[i].item_code,\n                \t\t\t\t\t\t\t'qty':cur_frm.doc.items[i].qty\n                \t\t\t\t\t\t}\n                    update_production_order.push(production_order_items);\n                }\n            }\n\t\t}\n\t\tconsole.log(update_po,\"update_po\")\n\t\tconsole.log(update_production_order,\"update_production_order\")\n\t\tif(update_po.length > 0){\n\t\t\tupdated_custom_received_qty_in_po(update_po)\n\t\t}\n\t\t/*if(update_production_order.length > 0){\n\t\t\tupdated_custom_manufactured_qty_in_production_order(update_production_order)\n\t\t}*/\n\t}\t\n});\n\n\nadd_production_order__bom_and_warehouse_detail = function(production_order,bom,from_warehouse,to_warehouse,qty){\n\tcur_frm.doc.production_order = String(production_order)\n\tcur_frm.doc.bom_no = String(bom)\n\tcur_frm.doc.from_bom = 1\n\tcur_frm.doc.from_warehouse = from_warehouse\n\tcur_frm.doc.to_warehouse = to_warehouse\n\tcur_frm.doc.fg_completed_qty = qty\n\trefresh_field([\"bom_no\",\"production_order\",\"from_warehouse\",\"to_warehouse\",\"fg_completed_qty\",\"from_bom\"]);\n}\n\n\nadd_po_items = function(items_to_add,item_code,i){\n\tvar me = this\n\tfrappe.call({    \n\t\tmethod: \"frappe.client.get_list\",\n\t   \targs: {\n\t    \tdoctype: \"Purchase Order Item\",\n\t       \tfields: [\"item_code\",\"qty\",\"warehouse\",\"uom\",\"stock_uom\",\"conversion_factor\",\"stock_qty\",\"parent\",\"custom_received_qty\"],\n\t       \tfilters: { \"item_code\" :item_code,\n\t       \t\t\t\t'parent': items_to_add[i],\n\t        \t},\n\t\t\t},\n\t\t\tcallback: function(res){\n\t\t\tif(res && res.message){\n\t\t\t\tconsole.log(res.message)\n\t\t\t\t$.each(res.message, function(i, d) {\n\t\t\t\t\tvar row = frappe.model.add_child(cur_frm.doc, \"Stock Entry Detail\", \"items\");\n\t                row.item_code = d.item_code;\n\t                row.qty = d.qty - d.custom_received_qty;\n\t                row.s_warehouse = d.warehouse;\n\t                row.uom = d.uom;\n\t                row.stock_uom = d.stock_uom;\n\t                row.conversion_factor = d.conversion_factor;\n\t                row.transfer_qty = d.qty - d.custom_received_qty;\n\t        \t\trow.purchase_order = d.parent;\n\t        \t})\n\t        \trefresh_field(\"items\");\n\t\t\t}\n\t\t}\n\t});\n}\n\nadd_production_order_items = function(production_order,produced_qty){\n\tvar me = this\n\tfrappe.call({    \n\t\tmethod: \"frappe.client.get_list\",\n\t   \targs: {\n\t    \tdoctype: \"Production Order\",\n\t       \tfields: [\"production_item\",\"qty\",\"wip_warehouse\",\"fg_warehouse\",\"stock_uom\",\"name\",\"custom_manufactured_qty\"],\n\t       \tfilters: { \"name\" : String(production_order)\n\t        \t},\n\t\t\t},\n\t\t\tcallback: function(res){\n\t\t\tif(res && res.message){\n\t\t\t\tconsole.log(res.message,\"add_production_order_items\")\n\t\t\t\tconsole.log(res.message[0]['production_item'],\"production_item\")\n\t\t\t\tvar row = frappe.model.add_child(cur_frm.doc, \"Stock Entry Detail\", \"items\");\n                row.item_code = res.message[0]['production_item'];\n                row.qty = parseFloat(produced_qty);\n                row.transfer_qty = parseFloat(produced_qty);\n                /*row.qty = res.message[0]['qty']\t - res.message[0]['custom_manufactured_qty'];\n                row.transfer_qty = res.message[0]['qty'] - res.message[0]['custom_manufactured_qty'];*/\n                row.t_warehouse = res.message[0]['fg_warehouse'];\n                row.uom = res.message[0]['stock_uom'];\n                row.stock_uom = res.message[0]['stock_uom'];\n                row.conversion_factor = 1;\n                row.production_order = res.message[0]['name'];\n\t        \trefresh_field(\"items\");\t        \t\n\t\t\t\tget_qty_and_item_code_from_bom(String(production_order),row.qty,res.message[0]['wip_warehouse'],res.message[0]['fg_warehouse'])\t\n\t\t\t}\n\t\t}\n\t});\n}\n\n\nget_qty_and_item_code_from_bom = function(production_order,qty,warehouse,t_warehouse){\n\tconsole.log(\"in get_qty_and_item_code_from_bom\")\n\tconsole.log(production_order,\"production_order\")\n\tfrappe.call({\n\t\tasync:false,\n\t\tmethod: \"frappe.client.get_value\",\n\t   \targs: {\n\t    \tdoctype: \"Production Order\",\n\t       \tfieldname: \"bom_no\",\n\t       \tfilters: { name : production_order },\n\t\t},\n\t\tcallback: function(res){\n\t\t\tconsole.log(res.message,\"get_items_from_po\")\n\t\t\tif(res && res.message){\n\t\t\t\tadd_bom_items(res.message['bom_no'],qty,production_order,warehouse)\n\t\t\t\tadd_production_order__bom_and_warehouse_detail(production_order,res.message['bom_no'],warehouse,t_warehouse,qty);\n\t\t\t}\n\t\t}\n\t})\t\n}\n\n\nadd_bom_items = function(bom,production_order_item_qty,production_order,warehouse){\n\tconsole.log(bom,production_order_item_qty,production_order,\"in add_bom_items\")\n\tfrappe.call({\n\t\tasync:false,    \n\t\tmethod: \"frappe.client.get_list\",\n\t   \targs: {\n\t    \tdoctype: \"BOM Item\",\n\t       \tfields: [\"item_code\",\"qty\",\"stock_uom\"],\n\t       \tfilters: { \"parent\" : bom\n\t        \t},\n\t\t\t},\n\t\t\tcallback: function(res){\n\t\t\tif(res && res.message){\n\t\t\t\tconsole.log(res.message,\"add_bom_items\")\n\t\t\t\t$.each(res.message, function(i, d) {\n\t\t\t\t\tvar row = frappe.model.add_child(cur_frm.doc, \"Stock Entry Detail\", \"items\");\n\t                row.item_code = d.item_code;\n\t                row.qty = d.qty * production_order_item_qty;\n\t                row.s_warehouse = warehouse;\n\t                row.uom = d.stock_uom;\n\t                row.stock_uom = d.stock_uom;\n\t                row.conversion_factor = 1;\n\t                row.transfer_qty = d.qty * production_order_item_qty;\n\t                row.bom_and_production_order = production_order +\"-\"+bom;\n\t        \t});\n\t        \trefresh_field(\"items\");\n\t\t\t}\n\t\t}\n\t});\n}\n\n\nupdated_custom_received_qty_in_po = function(){\n\tfrappe.call({    \n\t\tmethod: \"luma.custom_method.custom_method.update_custom_received_qty\",\n\t\targs: {\n\t\t\t\"update_po\": update_po,\n\t\t},\n\t\tcallback: function(res){\n\t\t\tconsole.log(res.message)\n\t\t\tif(res && res.message){\n\t\t\t}\n\t\t}\t\n\t});\n}\n\n\nupdated_custom_manufactured_qty_in_production_order = function(update_production_order){\n\tfrappe.call({    \n\t\tmethod: \"luma.custom_method.custom_method.update_custom_manufactured_qty\",\n\t\targs: {\n\t\t\t\"update_production_order\": update_production_order,\n\t\t},\n\t\tcallback: function(res){\n\t\t\tconsole.log(res.message)\n\t\t\tif(res && res.message){\n\t\t\t}\n\t\t}\t\n\t});\n}", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Order", 
  "modified": "2018-03-22 17:23:12.306090", 
  "name": "Sales Order-Client", 
  "script": "\nfrappe.ui.form.on(\"Sales Order\", {\n\trefresh: function(frm) {\n\t\n\t\tif(cur_frm.doc.status == \"Closed\") {\n\t\t\tcur_frm.add_custom_button(__('Make New Sales Order'),function() {\n\t\t\t\tmake_new_so();\n\t\t\t})\n\t\t}\n\t},\n});\n\nmake_new_so = function(){\n\tfrappe.model.open_mapped_doc({\n\t\tmethod: \"luma.custom_method.custom_method.make_new_so\",\n\t\tfrm: cur_frm\n\t})\n}", 
  "script_type": "Client"
 }
]